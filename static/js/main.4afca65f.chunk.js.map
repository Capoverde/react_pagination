{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","items","totalPages","Math","ceil","pages","onClickHandle","page","validPage","min","max","startItemIndex","endItemIndex","showItems","slice","className","cn","disabled","href","onClick","map","active","length","item","ITEMS_PER_PAGE_OPTIONS","App","useState","setPerPage","setCurrentPage","id","onChange","event","target","value","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"mLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAE9B,IADZC,EACW,EADXA,MAAOC,EACI,EADJA,QAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,aAAcC,EAChC,EADgCA,MAErCC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAQf,EAAW,EAAGY,GAEtBI,EAAgB,SAACC,GACrB,IAAMC,EAAYL,KAAKM,IAAIN,KAAKO,IAAIH,EAAM,GAAIL,GAE9CF,EAAaQ,IAGTG,GAAkBZ,EAAc,GAAKD,EACrCc,EAAeT,KAAKM,IAAIV,EAAcD,EAASD,GAC/CgB,EAAYZ,EAAMa,MAAMH,EAAgBC,GAE9C,OACE,qCACE,qBAAIG,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBlB,IAA3C,SACE,mBACE,UAAQ,WACRgB,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBnB,EACfoB,QAAS,kBAAMb,EAAcP,EAAc,IAL7C,oBAUDM,EAAMe,KAAI,SAACb,GAAD,OACT,oBAEEQ,UAAWC,IAAG,YAAa,CACzBK,OAAQtB,EAAc,GAAKA,GAAeM,EAAMiB,OAC5Cf,IAASR,EACA,IAATQ,IALR,SAQE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMX,GACVY,QAAS,kBAAMb,EAAcC,IAJ/B,SAMGA,KAbEA,MAiBT,oBAAIQ,UAAWC,IAAG,YAChB,CAAEC,SAAUlB,IAAgBG,IAD9B,SAGE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAAenB,IAAgBG,EAC/BiB,QAAS,kBAAMb,EAAcP,EAAc,IAL7C,uBAWJ,6BACGc,EAAUO,KAAI,SAACG,GAAD,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvEbC,G,MAAyB,CAAC,EAAG,EAAG,GAAI,KAM7BC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB6B,EAApB,KAGM3B,EARCX,EAAW,EAAG,IAAI8B,KAAI,SAAA1B,GAAC,qBAAYA,MASpCG,EAAQI,EAAMqB,OAkBpB,OACE,sBAAKP,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWhB,EADX,oBAXOA,EAAc,GAAKD,EAAW,EAWrC,cAPKK,KAAKM,IAAIV,EAAcD,EAASD,GAOrC,eAC+FA,EAD/F,OAIA,sBAAKkB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRc,GAAG,kBACHd,UAAU,eACVe,SA1Bc,SAACC,GACvBJ,GAAYI,EAAMC,OAAOC,QA0BjBA,MAAOnC,EALT,SAOG0B,EAAuBJ,KAAI,SAAAc,GAAM,OAChC,wBAAqBD,MAAOC,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACElB,OAAQA,EACRC,SAAUA,EACVC,aAAcA,EACdC,aAlDe,SAACO,GACpBqB,EAAerB,IAkDXN,MAAOA,QCpEfmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4afca65f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  items: string[];\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange, items,\n}: Props) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n\n  const onClickHandle = (page: number) => {\n    const validPage = Math.min(Math.max(page, 1), totalPages);\n\n    onPageChange(validPage);\n  };\n\n  const startItemIndex = (currentPage - 1) * perPage;\n  const endItemIndex = Math.min(currentPage * perPage, total);\n  const showItems = items.slice(startItemIndex, endItemIndex);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onClickHandle(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={cn('page-item', {\n              active: currentPage > 0 && currentPage <= pages.length\n                ? page === currentPage\n                : page === 1,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onClickHandle(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: currentPage === totalPages })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages}\n            onClick={() => onClickHandle(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {showItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nconst ITEMS_PER_PAGE_OPTIONS = [3, 5, 10, 20];\n\nconst generateItems = () => {\n  return getNumbers(1, 42).map(n => `Item ${n}`);\n};\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Move the 'items' declaration above the 'total' calculation\n  const items = generateItems();\n  const total = items.length;\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n  };\n\n  const calculateFirstItemIndex = () => {\n    return ((currentPage - 1) * perPage) + 1;\n  };\n\n  const calculateLastItemIndex = () => {\n    return Math.min(currentPage * perPage, total);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${calculateFirstItemIndex()} - ${calculateLastItemIndex()} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={onPerPageChange}\n            value={perPage}\n          >\n            {ITEMS_PER_PAGE_OPTIONS.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={+total}\n        perPage={+perPage}\n        currentPage={+currentPage}\n        onPageChange={onPageChange}\n        items={items}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}